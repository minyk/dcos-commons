{
  "type": "object",
    "properties": {
      "service": {
        "type": "object",
        "description": "DC/OS Redis service configuration properties",
        "properties": {
          "name": {
            "title": "Service name",
            "description": "The name of the service instance",
            "type": "string",
            "default": "redis"
          },
          "sleep": {
            "description": "The sleep duration in seconds before tasks exit.",
            "type": "number",
            "default":1000
          },
          "user": {
            "title": "User",
            "description": "The user that the service will run as.",
            "type": "string",
            "default": "root"
          },
          "service_account": {
            "description": "The service account for DC/OS service authentication. This is typically left empty to use the default unless service authentication is needed. The value given here is passed as the principal of Mesos framework.",
            "type": "string",
            "default": ""
          },
          "virtual_network_enabled": {
            "description": "Enable virtual networking",
            "type": "boolean",
            "default": true
          },
          "virtual_network_name": {
            "description": "The name of the virtual network to join",
            "type": "string",
            "default": "dcos"
          },
          "service_account_secret": {
            "title": "Credential secret name (optional)",
            "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
            "type": "string",
            "default": ""
          },
          "log_level": {
            "description": "The log level for the DC/OS service.",
            "type": "string",
            "enum": ["OFF", "FATAL", "ERROR", "WARN", "INFO", "DEBUG", "TRACE", "ALL"],
            "default": "INFO"
          }
        },
        "required":[
          "name",
          "sleep",
          "user"
        ]
      },
      "redis-network": {
        "description": "Redis Network configurations",
        "type": "object",
        "properties": {
          "protected-mode": {
            "title": "protected mode",
            "description": "Enabled protected mode. Enable if redis is exposed to external network.",
            "type": "boolean",
            "default": false
          },
          "tcp-backlog": {
            "title": "tcp-backlog",
            "description": "tcp-backlog",
            "type": "integer",
            "default": 511
          },
          "timeout": {
            "title": "client timeout",
            "description": "client timeout. 0 to disable",
            "type": "integer",
            "default": 0
          },
          "tcp-keepalive": {
            "title": "tcp-keepalive",
            "description": "tcp-keepalive in seconds.",
            "type": "integer",
            "default": 300
          }
        },
        "required":[
          "protected-mode",
          "tcp-backlog",
          "timeout",
          "tcp-keepalive"
        ]
      },
      "redis-general": {
        "description": "Redis General configurations",
        "type": "object",
        "properties": {
          "loglevel": {
            "title": "loglevel",
            "description": "loglevel. One of 'debug', 'verbose', 'notice', 'warning'",
            "type": "string",
            "enum": ["debug", "verbose", "notice", "warning"],
            "default": "notice"
          },
          "databases": {
            "title": "number of databases",
            "description": "number of databases",
            "type": "integer",
            "default": 16
          }
        },
        "required":[
          "loglevel",
          "databases"
        ]
      },
      "redis-snapshotting": {
        "description": "Redis Snapshotting configurations",
        "type": "object",
        "properties": {
          "save-enabled": {
            "title": "RDB save enable",
            "description": "Enable RDB save feature.",
            "type": "boolean",
            "default": false
          },
          "save-seconds": {
            "title": "save seconds configuration",
            "description": "RDB save after this seconds.",
            "type": "integer",
            "default": 300
          },
          "save-keys": {
            "title": "save keys configuration",
            "description": "RDB save after this keys changed.",
            "type": "integer",
            "default": 10
          }
        },
        "required":[
          "save-enabled",
          "save-seconds",
          "save-keys"
        ]
      },
      "redis-security": {
        "description": "Redis Security configurations",
        "type": "object",
        "properties": {
          "requirepass": {
            "title": "requirepass",
            "description": "password for redis connections.",
            "type": "string",
            "default": "pass"
          }
        },
        "required":[
          "requirepass"
        ]
      },
      "redis-limits": {
        "description": "Redis Limits configurations",
        "type": "object",
        "properties": {
          "maxclients": {
            "title": "maxclients",
            "description": "maximum client numbers.",
            "type": "integer",
            "default": 1000
          },
          "maxmemory": {
            "title": "maxmemory",
            "description": "Maximum memory usage. Can be setted like this: 1m, 1mb, 1g or 1gb.",
            "type": "string",
            "default": "32mb"
          },
          "maxmemory-policy": {
            "title": "maxmemory policy",
            "description": "Maximum memory eviction policy. One of volatile-lru, allkeys-lru, volatile-random, allkeys-random, volatile-ttl or noeviction.",
            "type": "string",
            "default": "volatile-lru"
          },
          "maxmemory-samples": {
            "title": "maxmemory samples",
            "description": "Sampling number for maxmemory policy. One from 1 to 10. 10 Approximates very closely true LRU but costs a bit more CPU. 3 is very fast but not very accurate.",
            "type": "integer",
            "default": 5
          }
        },
        "required":[
          "maxclients",
          "maxmemory",
          "maxmemory-policy",
          "maxmemory-samples"
        ]
      },
      "redis-appendonlymode": {
        "description": "Redis Append only mode configurations",
        "type": "object",
        "properties": {
          "appendonly": {
            "title": "appendonly",
            "description": "Enable append only mode.",
            "type": "boolean",
            "default": true
          },
          "auto-aof-rewrite-percentage": {
            "title": "auto-aof-rewrite-percentage",
            "description": "Percentage(1 to 100) between latest rewrite file and current rewrite file size. Specify a percentage of zero in order to disable the automatic AOF rewrite feature.",
            "type": "integer",
            "default": 0
          },
          "auto-aof-rewrite-min-size": {
            "title": "auto-aof-rewrite-min-size",
            "description": "Specify a minimal size for the AOF file to be rewritten.",
            "type": "string",
            "default": "64mb"
          }
        },
        "required":[
          "appendonly",
          "auto-aof-rewrite-percentage",
          "auto-aof-rewrite-min-size"
        ]
      },
      "redis-advanced": {
        "description": "Redis Advanced configurations",
        "type": "object",
        "properties": {
          "hash-max-ziplist-entries": {
            "title": "hash-max-ziplist-entries",
            "description": "hash-max-ziplist-entries",
            "type": "integer",
            "default": 512
          },
          "hash-max-ziplist-value": {
            "title": "hash-max-ziplist-value",
            "description": "hash-max-ziplist-value",
            "type": "integer",
            "default": 64
          },
          "list-max-ziplist-size": {
            "title": "list-max-ziplist-size",
            "description": "a fixed maximum size or a maximum number of elements. For a fixed maximum size, use -5 through -1.",
            "type": "integer",
            "default": -2
          },
          "list-compress-depth": {
            "title": "list-compress-depth",
            "description": "Compress depth of list. 0: disable all list compression.",
            "type": "integer",
            "default": 2
          },
          "set-max-intset-entries": {
            "title": "set-max-intset-entries",
            "description": "Setting sets the limit in the size of the set in order to use this special memory saving encoding.",
            "type": "integer",
            "default": 512
          },
          "zset-max-ziplist-entries": {
            "title": "zset-max-ziplist-entries",
            "description": "Setting sets the limit in the size of the set in order to use this special memory saving encoding.",
            "type": "integer",
            "default": 128
          },
          "zset-max-ziplist-value": {
            "title": "set-max-intset-entries",
            "description": "Setting sets the limit in the size of the set in order to use this special memory saving encoding.",
            "type": "integer",
            "default": 64
          },
          "hll-sparse-max-bytes": {
            "title": "hll-sparse-max-bytes",
            "description": "HyperLogLog sparse representation bytes limit.",
            "type": "integer",
            "default": 3000
          }
        },
        "required":[
          "hash-max-ziplist-entries",
          "hash-max-ziplist-value",
          "list-max-ziplist-size",
          "list-compress-depth",
          "set-max-intset-entries",
          "zset-max-ziplist-entries",
          "zset-max-ziplist-value",
          "hll-sparse-max-bytes"
        ]
      },
      "redis-node": {
        "description": "Redis Master Configuration properties",
        "type": "object",
        "properties": {
          "cpus": {
            "title": "CPU count",
            "description": "Master CPU requirements",
            "type": "number",
            "default":1
          },
          "mem": {
            "title": "Memory size (MB)",
            "description": "Master mem requirements (in MB). Also redis slaves uses this configuration.",
            "type": "integer",
            "default":64
          },
          "count_slaves": {
            "title": "Slave Node count",
            "description": "Number of slave nodes to run",
            "type": "integer",
            "default":2
          },
          "placement_constraint_master": {
            "title": "Master placement constraint",
            "description": "Marathon-style placement constraint for slave nodes. Example: 'hostname:UNIQUE'",
            "type": "string",
            "default": ""
          },
          "placement_constraint_slaves": {
            "title": "Slave placement constraint",
            "description": "Marathon-style placement constraint for slave nodes. Example: 'hostname:UNIQUE'",
            "type": "string",
            "default": ""
          }
        },
        "required":[
          "cpus",
          "mem",
          "count_slaves"
        ]
      },
      "redis-sentinel": {
        "description": "Redis sentinel configurations. Experts only.",
        "type": "object",
        "properties": {
          "sentinel_enabled": {
            "description": "Enable redis sentinel",
            "type": "boolean",
            "default": true
          },
          "count": {
            "title": "Sentinel Node count",
            "description": "Number of sentinel pods to run. 3 or 5 is enough.",
            "type": "integer",
            "default":3
          },
          "placement_constraint": {
            "title": "Placement constraint",
            "description": "Marathon-style placement constraint for sentinel nodes. Example: 'hostname:UNIQUE'",
            "type": "string",
            "default": "hostname:UNIQUE"
          },
          "master-name": {
            "title": "Name of master",
            "description": "Redis master name for watching.",
            "type": "string",
            "default": "mymaster"
          },
          "quorum": {
            "title": "Slave Quorum",
            "description": "Quorum number",
            "type": "integer",
            "default": 2
          },
          "down-after": {
            "title": "down-after-milliseconds",
            "description": "master down after in milliseconds",
            "type": "integer",
            "default": 60000
          },
          "failover-timeout": {
            "title": "failover-timeout",
            "description": "failover-timeout",
            "type": "integer",
            "default": 180000
          },
          "parallel-syncs": {
            "title": "parallel-syncs",
            "description": "parallel-syncs",
            "type": "integer",
            "default": 1
          }
        },
        "required":[
          "sentinel_enabled",
          "count",
          "placement_constraint",
          "master-name",
          "quorum"
        ]
      },
      "redis-stadis": {
        "description": "Redis Stadis Configuration properties",
        "type": "object",
        "properties": {
          "stadis_enabled": {
            "description": "Enable redis status export to DC/OS Metrics.",
            "type": "boolean",
            "default": true
          },
          "stadis_interval": {
            "title": "stadis interval",
            "description": "Interval(ms) for metrics.",
            "type": "integer",
            "default": 5000
          }
        },
        "required":[
          "stadis_enabled",
          "stadis_interval"
        ]
      }
    },
    "required": [
      "service",
      "redis-network",
      "redis-general",
      "redis-snapshotting",
      "redis-security",
      "redis-limits",
      "redis-appendonlymode",
      "redis-advanced",
      "redis-node",
      "redis-sentinel",
      "redis-stadis"
    ]
}
